#!/bin/sh

# ----- VARS
CMD=$1
BUNDLENAME=$2
FOLDER=$MYEXTENSION/RevitSupport.tab/BETA.panel
BUNDLE=$FOLDER/$BUNDLENAME.pushbutton
ALLBUNDLES=$(ls -D $MYEXTENSION/RevitSupport.tab/Beta.panel)

# ----- FUNCS
Help() {
  echo
  echo "Manage your pyRevit Bundles!"
  echo
  echo "Usage:"
  echo "    `basename $0` list"
  echo "    `basename $0` [add|edit|remove] <bundle-name>"
  echo
}

Add() {
  if [ ! -d "$BUNDLE" ]; then
    mkdir -p $BUNDLE
    touch $BUNDLE/script.py
    cat >$BUNDLE/script.py <<EOL
# -*- coding: utf-8 -*-
# from pyrevit.framework import clr
from pyrevit import forms, revit, DB, script

# logger = script.get_logger()
# output = script.get_output()

# if error:
#     logger.debug("Something bad happend")
#     script.exit()

# with revit.Transaction("some transaction"):

# doors = DB.FilteredElementCollector(revit.doc) \
#     .OfCategory(DB.BuiltInCategory.OST_Doors) \
#     .WhereElementIsElementType() \
#     .ToElements()

# for door in doors:
#     print(door.get_Parameter(
#         DB.BuiltInParameter.ALL_MODEL_FAMILY_NAME).AsString())
EOL
  echo New Bundle created at $BUNDLE
  else
    echo $BUNDLENAME exists already!
  fi
}

Edit() {
  if [ -d "$BUNDLE" ]; then
    vim $BUNDLE/script.py
  else
    echo $BUNDLENAME does not exists!
  fi
}

Remove() {
  if [ -d "$BUNDLE" ]; then
    rm -rf $BUNDLE
    echo $BUNDLE/$BUNDLENAME removed
  else
    echo $BUNDLENAME does not exists!
  fi
}

List() {
  if [ -n "$ALLBUNDLES" ]; then
    echo "Available bundles:"
    for BUNDLE in $ALLBUNDLES
    do
      # remove ".pushbutton"
      echo "    - ${BUNDLE%.*}"
    done
  else
    echo There are no Bundles available at $MYEXTENSION
  fi
}


# ----- MAIN
if [ -z "$CMD" ]; then
  Help
  exit 1
fi

if [ $CMD = "list" ]; then
  List
elif [ -z "$BUNDLENAME" ];then
  echo "Error: No Bundle name given"
  Help
  exit 1
elif [ $CMD = "add" ]; then
  Add
elif [ $CMD = "edit" ]; then
  Edit
elif [ $CMD = "remove" ]; then
  Remove
else
  Help
  exit 1
fi

# if [ $CMD = "add" -a -n "$BUNDLENAME" ]; then
#   Add
# elif [ $CMD = "edit" -a -n "$BUNDLENAME" ]; then
#   Edit
# elif [ $CMD = "remove" -a -n "$BUNDLENAME" ]; then
#   Remove
# elif [ $CMD = "list" ]; then
#   List
# else
#   Help
#   exit 1
# fi

