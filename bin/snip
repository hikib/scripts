#!/bin/sh

[ -z "$SNIPPETS" ] && echo "SNIPPETS directory not defined" && exit 1
readonly -a COMMANDS=(help ls rm edit)

# ----- HELP

_help() {
  echo
  echo "`basename $0`"
  echo
  echo "Usage:"
  echo "    `basename $0` ls"
  echo "    `basename $0` <name>"
  echo "    `basename $0` [edit|rm] <name>"
  echo "    `basename $0` help"
  echo
  echo "Help:"
  echo "    `basename $0` help"
  echo "    `basename $0` <command> help"
  echo
  exit 1
}

_ls() {
  [ -z "$SNIPPETS" ] && echo "No snips available" && exit 1
  echo $(ls "$SNIPPETS")
}

_edit() {
  [ $# -gt 1 ] && echo "Too many arguments" && _help
  local name="$1"
  vim "$SNIPPETS/$name"
  echo $name
}

_rm() {
  for s in "$@"; do
    rm "$SNIPPETS/$s" && echo "removed: $SNIPPETS/$s"
  done
}

_get() {
  [ -z "$1" ] && echo "Missing keywords." && exit 1
  # [ "$1" == help ] && echo "TODO: help" && exit 1
  local name=$1
  local hit=$(find $SNIPPETS/ -name "$1")
  local hitCount=$(printf "$hit" | wc -w)
  [ $hitCount -lt 1 ] && echo "Nothing found." && exit 1
  [ $hitCount -gt 1 ] && echo "Too many matches." && exit 1
  cat $hit
}

# ----- MAIN

main() {
  [ -z "$1" ] && _help
  local CMD=$1
  shift

  # use snip <name> to return snip
  if [ ! -z $(_ls | grep -o $CMD) ]; then
    _get $CMD
    exit 0
  fi

  # tab completion
  if [ -n "$COMP_LINE" ]; then
    for c in ${COMMANDS[@]}; do
      [ "${c:0:${#1}}" == "$1" ] && echo "${c}"
    done
    exit 0
  fi

  # full command match
  for c in ${COMMANDS[@]}; do
    if [ "${c}" == "${CMD}" ]; then
      "_${c}" "$@"
      exit 0
    fi
  done
}

[ -z "${NORUN}" ] && main "$@"

